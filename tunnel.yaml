# Cloudflare Tunnel Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: infrastructure
  labels:
    app.kubernetes.io/name: cloudflared
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/component: tunnel
    app.kubernetes.io/part-of: infrastructure
    app.kubernetes.io/managed-by: kubectl
    homelab.local/category: networking
    homelab.local/exposure: tunnel
    homelab.local/backup: none
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudflared
      app.kubernetes.io/component: tunnel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudflared
        app.kubernetes.io/instance: production
        app.kubernetes.io/component: tunnel
        app.kubernetes.io/part-of: infrastructure
        homelab.local/category: networking
    spec:
      containers:
        - name: cloudflared
          image: cloudflare/cloudflared
          command: ["tunnel", "run"]
          env:
            - name: NO_AUTOUPDATE
              value: "true"
          envFrom:
            - secretRef:
                name: cloudflared-secret
      restartPolicy: Always

---
# NetworkPolicy Example - Restrict Nextcloud DB access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nextcloud-db-policy
  namespace: homelab
  labels:
    app.kubernetes.io/part-of: nextcloud-suite
    homelab.local/category: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: database
      app.kubernetes.io/part-of: nextcloud-suite
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: nextcloud-suite
      ports:
        - protocol: TCP
          port: 5432
